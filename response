Reviewers 2, 3 and 4 ask about mechanisation. We agree that
mechanisation would be a good thing to do. It would be a big
undertaking. Instead, one immediate goal is to provide a symbolic
analysis/model checking tool for our operational semantics to check
invariants up to a bound. Our aim would be to check the two large
examples, X and Y, from [..]. Another goal is to provide litmus tests
to demonstrate that implementations (for example, Amazon's unpublished
Dynamo DB) do not satisfy a particular consistency model.


[Are there existing mechanised specifications of abstract executions
that we can hook to?]

Review 1.

The paper limit is 25 pages plus bibliography, as stipulated in the
submission conditions. 

We understand that the appendix is long. All details in the appendix
will be in Xiong's thesis, submitted early January, and on
arXiv. Thank you for saying that the appendix contains one (if not
several) papers of its own. Given that our operational semantics for
atomic transactions is an interface between implementations and
clients, and is a reformation of existing axiomatic definitions, we
felt that we had to justify our operational semantics with respect to
all.


Reviewer 3.

....whole history via the versions.......I don't know how to answer this, I've
written down a few notes.....

--[19] records whole history, consistency model given by analysing the
  whole history

--we record the partial key-history. For CC, the ET analyses the
  versions that impact on the transaction, not the whole history. 

--in discussion, Andrea made strong claims that [19] was not good for
  analysing client behaviour. How do we say this?

-- [19] shows that certain definitions of concistency model collapse
to the same thing.  It does not link to implementations or client
behaviour. It will be able to link to implementaitons.  It is probably
difficut for it to provide client anslysis because.....


Reviewer  2 and 4.

We will work hard to improve the presentation of the paper. We will
act on all detailed comments.


